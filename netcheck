#!/usr/bin/env bash

# netcheck - convenience wrapper of ping for internet connection check
#
# @author Marion Anderson
# @date   2017-12-05
#
# pings 8.8.8.8 (Google DNS)
# see netcheck -h for usage

# Setup ---------------------------------------------------------------
set -o errexit  # exit on any command error

# Displays usage/help dialog
helpstr="usage: netcheck [-n num] [-q]\n"
helpstr+="\t-n num: how many times to ping 8.8.8.8\n"
helpstr+="\t        (default num is 5)\n\n"
helpstr+="\t-q:     enables quiet mode\n" 
helpstr+="\t        (default is loud)\n"
function helpmsg
{
    printf "$helpstr" 1>&2
}

# Input Arg Parsing -------------------------------------------------

# too many args check
if [ $# -gt 3 ]
then
    printf "Error: too many arguments\n" 1>&2
    helpmsg
    exit 1
fi

# long help cmd check
if [ $1 = "--help" ]
then
    helpmsg
    exit 0
fi

# optional arg parsing
OPTIND=1  # reset getopts just in case
while getopts "h?qn:" opt
do
    case "$opt" in
    h|\?)
        helpmsg
        exit 0
        ;;
    n)
        num_pings="$OPTARG"
        ;;
    q)
        loud_flag=false
        ;;
    *)
        printf "Error: unrecognized option\n" 1>&2
        helpmsg
        exit 1
    esac
done

# make sure num_pings is an int
if ! grep --extended-regexp --quiet "^[1-9][0-9]*$" <<< "$num_pings"
then
    printf "Error: num (value: $num_pings) is not an integer\n" 1>&2
    helpmsg
    exit 1
fi

# param expansion for defaults
: ${num_pings:=5}
: ${loud_flag:=true}

# arg_str for ping
arg_str="-c $num_pings"
if [ $loud_flag = false ]; then arg_str+=" -q"; fi
arg_str+=" 8.8.8.8"

# Execution ---------------------------------------------------------

exec ping $arg_str
exit 0

